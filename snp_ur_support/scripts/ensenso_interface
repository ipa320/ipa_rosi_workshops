#!/usr/bin/env python

# Copyright (c) 2018, Fraunhofer IPA
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import rospy
import actionlib
from actionlib_msgs.msg import GoalStatus

from ensenso_camera_msgs.msg import RequestDataAction, RequestDataGoal
from std_srvs.srv import Trigger, TriggerResponse


class scan_interface():
    def __init__(self):
        self.trigger_service = rospy.Service("point_cloud_workspace_request",Trigger,self.get_last_scan)
        self.request_scan = actionlib.SimpleActionClient("request_data", RequestDataAction)

    def get_last_scan(self, req):
        goal = RequestDataGoal()
        goal.request_point_cloud = True
        state = self.request_scan.send_goal_and_wait(goal,rospy.Duration(1.0))
        print state
        if(state == GoalStatus.SUCCEEDED):
            return TriggerResponse (True, "Requested scan succeed !")
        else:
            return TriggerResponse (False, "Requested scan failed: %s"%(self.request_scan.get_result().error.message))

if __name__ == "__main__":
    rospy.init_node("ensenso_scan_interface")
    SI = scan_interface()
    rospy.spin()
